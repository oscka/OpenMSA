
## Create kubeconfig directory
- name: 4.1. Create directory
  file:
    path: "{{ item  }}"
    state: directory
  with_items:
    - $HOME/.kube
    - "/home/{{ USER }}/.kube"

## Copy kubeconfig file
- name: 4.2. Copy kubeconfig file
  copy:
    src: "{{ LOCAL_PATH.BASE }}/kubeconfig"
    dest: "{{ item  }}"
  with_items:
    - $HOME/.kube/config
    - "/home/{{ USER }}/.kube/config"

- name: Set tool versions
  set_fact:
    kubectl_version: "v1.29.2"
    k9s_version: "v0.31.9"
    helm_version: "v3.14.2"

- name: Create temporary directory
  tempfile:
    state: directory
    suffix: tools
  register: temp_dir

- name: Download kubectl
  get_url:
    url: "https://dl.k8s.io/release/{{ kubectl_version }}/bin/linux/amd64/kubectl"
    dest: "{{ temp_dir.path }}/kubectl"
    mode: '0755'

- name: Download k9s
  unarchive:
    src: "https://github.com/derailed/k9s/releases/download/{{ k9s_version }}/k9s_Linux_amd64.tar.gz"
    dest: "{{ temp_dir.path }}"
    remote_src: yes

- name: Download helm
  unarchive:
    src: "https://get.helm.sh/helm-{{ helm_version }}-linux-amd64.tar.gz"
    dest: "{{ temp_dir.path }}"
    remote_src: yes

- name: Install tools to /usr/local/bin
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: '0755'
    remote_src: yes
  become: yes
  loop:
    - { src: "{{ temp_dir.path }}/kubectl", dest: "/usr/local/bin/kubectl" }
    - { src: "{{ temp_dir.path }}/k9s", dest: "/usr/local/bin/k9s" }
    - { src: "{{ temp_dir.path }}/linux-amd64/helm", dest: "/usr/local/bin/helm" }

- name: Create symbolic links in /usr/bin
  file:
    src: "/usr/local/bin/{{ item }}"
    dest: "/usr/bin/{{ item }}"
    state: link
    force: yes
  become: yes
  loop:
    - kubectl
    - k9s
    - helm

- name: Clean up temporary directory
  file:
    path: "{{ temp_dir.path }}"
    state: absent
