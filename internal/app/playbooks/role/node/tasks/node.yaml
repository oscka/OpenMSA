
## Swap off
- name: 2.9. Swap off
  shell: swapoff -a

- name: 2.10. Swap off of fstab file
  shell: sed -i '/swap/s/^/#/' /etc/fstab

- name: 2.11. Check swap memory size
  shell: free | awk 'NR == 3 { print $2 }'
  register: check_swap_mem

- name: 2.12. Check swapoff
  debug:
    msg: "Complete swapoff!"
  when: check_swap_mem.stdout == '0'

# Flush iptables
- name: 2.13. Flush iptables
  iptables:
    flush: yes

# Diable SELinux
- name: 2.14. Disable SELinux
  ansible.posix.selinux:
    policy: targeted
    state: disabled

- name: 2.15. Update SELinux configuration file
  lineinfile:
    path: /etc/selinux/config
    regexp: '^SELINUX='
    line: SELINUX=disabled
    backup: yes # 내용이 다르면 백업(파일이름.날짜 형식) / 같으면 백업 X

- name: 2.16. SELinux state
  shell: getenforce
  register: "check_selinux"

- name: 2.17. Print SELinux status
  debug:
    msg: "{{ check_selinux.stdout }}"

# Configure network
- name: 2.19. Add the content to the file
  copy:
    dest: "/etc/NetworkManager/conf.d/rke2-canal.conf"
    content: |
      ##
      [keyfile]
      unmanaged-devices=interface-name:cali*;interface-name:flannel*
      ##

- name: 2.20. Reload NetworkManager
  systemd:
    name: NetworkManager
    state: restarted
    enabled: true
  register: "check_networkmanager_status"

- name: 2.21. Print NetworkManager service status
  debug:
    msg: "{{ check_networkmanager_status }}"

# Disable firewalld
- name: 2.22. Be sure firewalld is disabled
  systemd: name=firewalld enabled=no
  ignore_errors: true

- name: 2.23. Be sure firewalld is stopped
  systemd: name=firewalld state=stopped
  ignore_errors: true
  
# Reboot (SELINUX DISABLE 적용)
- name: 2.24. Reboot the all servers
  shell: "sleep 5 && reboot"
  async: 1
  poll: 0

- name: 2.25. Wait for the machine to come back online
  wait_for_connection:
    delay: 60
    timeout: 500
    sleep: 5
