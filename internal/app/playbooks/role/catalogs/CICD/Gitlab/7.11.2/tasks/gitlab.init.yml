# GitLab 어플리케이션 설정
- name: "8.13.4.1. ===== GitLab application config ====="
  block:
    # GitLab WebService 도메인 명 추출 - e.g. gitlab.cnstudio.com
    - name: "8.13.4.1.1. Find gitlab webservice domain"
      shell: |
        kubectl get ingress gitlab-webservice-default \
          -n {{GITLAB_METADATA_NAMESPACE | default(GITLAB_DEFAULT_METADATA_NAMESPACE,true)}} \
          -o jsonpath='{.spec.rules[0].host}'
      register: gitlab_webservice_domain

    - debug:
        var: gitlab_webservice_domain.stdout

    # GitLab WebService 도메인을 현재 노드의 /etc/hosts에 추가합니다.
    - name: "8.13.4.1.2. GitLab domain append to file"
      become: true
      blockinfile:
        path: /etc/hosts
        marker: "# {mark} ----- ANSIBLE MANAGED BLOCK (GitLab) -----"
        block: |
           {{ ALL_Servers[0].ip }} {{gitlab_webservice_domain.stdout}}

    # GitLab API Bulk Import 활성화
    - name: "8.13.4.1.3. GitLab webservice configuration bulk import set enable"
      uri:
        method: PUT
        url: https://{{gitlab_webservice_domain.stdout}}/api/v4/application/settings?bulk_import_enabled=true&import_sources[]=gitlab_project
        validate_certs: false
        headers:
          PRIVATE-TOKEN: "{{GITLAB_ACCOUNT_ROOT_ACCESS_TOKEN_VALUE}}"

    # GitLab API Bulk Import 활성화 여부 확인
    - name: "8.13.4.1.4. Wait for application setting correctly"
      uri:
        method: GET
        url: https://{{gitlab_webservice_domain.stdout}}/api/v4/application/settings
        validate_certs: false
        headers:
          PRIVATE-TOKEN: "{{GITLAB_ACCOUNT_ROOT_ACCESS_TOKEN_VALUE}}"
        status_code: [200]
      register: val
      retries: 10
      delay: 10
      until: "'gitlab_project' in val.json.import_sources and val.json.bulk_import_enabled"

    - debug:
        var: val.json.import_sources

    # 예시 프로젝트 코드 Import 작업
    - name: "8.13.4.1.5. Import sample source project files"
      block: 
        # GitLab Group 생성 (cnstudio)
        - name: "8.13.4.1.5.1. Create group namespace"
          uri:
            method: POST
            url: https://{{gitlab_webservice_domain.stdout}}/api/v4/groups?name=cnstudio&path=cnstudio&visibility=public
            validate_certs: false
            status_code: [200,201]
            headers:
              PRIVATE-TOKEN: "{{GITLAB_ACCOUNT_ROOT_ACCESS_TOKEN_VALUE}}"
          register: group_api_result

        # JAVA - SpringBoot Sample Source Project Import
        - name: "8.13.4.1.5.2. Import sample source project (JAVA)"
          local_action: >
            shell 
            curl --request POST -k \
                -H 'PRIVATE-TOKEN: {{GITLAB_ACCOUNT_ROOT_ACCESS_TOKEN_VALUE}}' \
                -F 'file=@{{ role_path }}/files/archives/projects/java-demo-api.tar.gz' \
                -F 'namespace=cnstudio' \
                -F 'name="Java Demo Api"' \
                -F 'path="java-demo-api"' \
                'https://{{gitlab_webservice_domain.stdout}}/api/v4/projects/import'
          register: java_import_result
          when: GITLAB_PERSISTENT_INCLUDE_JAVA_SAMPLE_SOURCE
          retries: 100  
          delay: 7
          until: java_import_result.stdout[2] != 'm' 



        # Node.js Sample Source Project Import
        - name: "8.13.4.1.5.3. Import sample source project (NodeJS)"
          local_action: >
            shell 
            curl --request POST -k \
              -H 'PRIVATE-TOKEN: {{GITLAB_ACCOUNT_ROOT_ACCESS_TOKEN_VALUE}}' \
              -F 'file=@{{ role_path }}/files/archives/projects/node-demo-api.tar.gz' \
              -F 'namespace=cnstudio' \
              -F 'name="Node Demo Api"' \
              -F 'path="node-demo-api"' \
              'https://{{gitlab_webservice_domain.stdout}}/api/v4/projects/import'
          register: nodejs_import_result
          when: GITLAB_PERSISTENT_INCLUDE_NODEJS_SAMPLE_SOURCE
          retries: 100
          delay: 7
          until: nodejs_import_result.stdout[2] != 'm'

        # Python Sample Source Project Import API
        - name: "8.13.4.1.5.4. Import sample source project (Python)"
          local_action: >
            shell 
            curl --request POST -k \
                -H 'PRIVATE-TOKEN: {{GITLAB_ACCOUNT_ROOT_ACCESS_TOKEN_VALUE}}' \
                -F 'file=@{{ role_path }}/files/archives/projects/python-demo-api.tar.gz' \
                -F 'namespace=cnstudio' \
                -F 'name="Python Demo Api"' \
                -F 'path="python-demo-api"' \
                'https://{{gitlab_webservice_domain.stdout}}/api/v4/projects/import'
          register: python_import_result
          when: GITLAB_PERSISTENT_INCLUDE_PYTHON_SAMPLE_SOURCE
          retries: 100
          delay: 7
          until: python_import_result.stdout[2] != 'm'
  
        # API Gateway (Spring Boot) Sample Source Project Import API
        - name: "8.13.4.1.5.5. Import sample source project (API Gateway)"
          local_action: >
            shell 
            curl --request POST -k \
                -H 'PRIVATE-TOKEN: {{GITLAB_ACCOUNT_ROOT_ACCESS_TOKEN_VALUE}}' \
                -F 'file=@{{ role_path }}/files/archives/projects/gateway-demo-api.tar.gz' \
                -F 'namespace=cnstudio' \
                -F 'name="Gateway Demo Api"' \
                -F 'path="gateway-demo-api"' \
                'https://{{gitlab_webservice_domain.stdout}}/api/v4/projects/import'
          register: spring_import_result
          when: GITLAB_PERSISTENT_INCLUDE_API_GATEWAY_SAMPLE_SOURCE
          retries: 100
          delay: 7
          until: spring_import_result.stdout[2] != 'm'

        # GitOps Sample Project Import API (ArgoCD에서 사용)
        - name: "8.13.4.1.5.6. Import sample source project files (GitOps)"
          local_action: >
            shell 
            curl --request POST -k \
                -H 'PRIVATE-TOKEN: {{GITLAB_ACCOUNT_ROOT_ACCESS_TOKEN_VALUE}}' \
                -F 'file=@{{ role_path }}/files/archives/projects/cnstudio-demo-ops.tar.gz' \
                -F 'namespace=cnstudio' \
                -F 'name="CNStudio Demo Ops"' \
                -F 'path="cnstudio-demo-ops"' \
                'https://{{gitlab_webservice_domain.stdout}}/api/v4/projects/import'
          register: GitOps_import_result
          when: GITLAB_PERSISTENT_INCLUDE_GITOPS_SAMPLE_SOURCE
          retries: 100
          delay: 7
          until: GitOps_import_result.stdout[2] != 'm'

        - name: "java_import_result.stdout[2]"
          debug:
            var: java_import_result.stdout[2]

        - name: "java_import_result.stdout[2] != 'm'"
          debug:
            var: java_import_result.stdout[2] != 'm'

        - name: "python_import_result.stdout[2]"
          debug:
            var: python_import_result.stdout[2]

        - name: "python_import_result.stdout[2] != 'm'"
          debug:
            var: python_import_result.stdout[2] != 'm'

        - name: "nodejs_import_result.stdout[2]"
          debug:
            var: nodejs_import_result.stdout[2]

        - name: "nodejs_import_result.stdout[2] != 'm'"
          debug:
            var: nodejs_import_result.stdout[2] != 'm'


        - name: "GitOps_import_result.stdout[2]"
          debug:
            var: GitOps_import_resilt.stdout[2]


        - name: "GitOps_import_result.stdout[2]!='m'"
          debug:
            var: GitOps_import_result.stdout[2]!='m'

        - name: "spring_import_result.stdout[2]"
          debug:
            var: spring_import_result.stdout[2]

        - name: "spring_import_result.stdout[2] != 'm'"
          debug:
            var: spring_import_result.stdout[2] != 'm'


      rescue:
        - name: "8.13.4.1.5.7. ***** ERROR OCCURED : GitLab Sample Projects Import Job Failure *****"
          fail:
            msg: "Unexpected error occured when gitlab sample source import job running..."



      always:
        # GitLab API Bulk Import 비활성화 (복구)
        - name: "8.13.4.1.5.8. GitLab webservice configuration bulk import set disable"
          uri:
            method: PUT
            url: https://{{gitlab_webservice_domain.stdout}}/api/v4/application/settings?bulk_import_enabled=false&import_sources[]=
            validate_certs: false
            headers:
              PRIVATE-TOKEN: "{{GITLAB_ACCOUNT_ROOT_ACCESS_TOKEN_VALUE}}"

  when: GITLAB_PERSISTENT_INCLUDE_SAMPLE_SOURCE
